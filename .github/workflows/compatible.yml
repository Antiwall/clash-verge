name: Compatible CI

on:
  workflow_dispatch:
  # push:
  #   tags:
  #     - v**

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        targets:
          - tag: macOS-10.15
            os: macos-10.15
          - tag: Ubuntu18
            os: ubuntu-18.04
          - tag: Ubuntu22
            os: ubuntu-22.04

    runs-on: ${{ matrix.targets.os }}
    if: startsWith(github.repository, 'Antiwall')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      # - name: Install Dependencies (ubuntu18 only)
      #   if: matrix.targets.os == 'ubuntu-18.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev librsvg2-dev libayatana-appindicator3-dev

      - name: Install Dependencies (ubuntu22 only)
        if: startsWith(matrix.targets.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: pnpm install and check
        run: |
          pnpm install
          npm run check

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ matrix.targets.tag }}
          releaseName: "Compatible For ${{ matrix.targets.tag }}"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: false

      # - name: Portable Bundle
      #   if: matrix.os == 'windows-latest'
      #   # rebuild with env settings
      #   run: |
      #     yarn build
      #     yarn run portable
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      #     TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      #     VITE_WIN_PORTABLE: 1
